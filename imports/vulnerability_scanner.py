#!/usr/bin/env python
import requests
import re


def is_valid_ip(ip):
    ip_pattern = re.compile(r'^(\d{1,3}\.){3}\d{1,3}$')
    return ip_pattern.match(ip) is not None


def check_robots_txt(ip):
    url = f"http://{ip}/robots.txt"
    try:
        response = requests.get(url)
        if response.status_code == 200:
            return "robots.txt found!"
        else:
            return "robots.txt not found."
    except requests.RequestException as e:
        return f"An error occurred: {e}"


def check_git_directory(ip):
    url = f"http://{ip}/.git/"
    try:
        response = requests.get(url)
        if response.status_code == 200:
            return ".git directory found!"
        else:
            return ".git directory not found."
    except requests.RequestException as e:
        return f"An error occurred: {e}"


def check_default_pages(ip):
    default_pages = [
        '/index.html',
        '/index.php',
        '/default.aspx',
    ]
    results = []
    for page in default_pages:
        url = f"http://{ip}{page}"
        try:
            response = requests.get(url)
            if response.status_code == 200:
                results.append(f"{page} page found! (200)")
            else:
                results.append(f"{page} page not found (404).")
        except requests.RequestException as e:
            results.append(f"{page} there is an error with the page: {e}")
    return results


def run_vulnerability_scan(ip):
    if not is_valid_ip(ip):
        return ["Invalid IP."]

    results = []
    results.append(check_robots_txt(ip))
    results.append(check_git_directory(ip))
    results.extend(check_default_pages(ip))
    return results
